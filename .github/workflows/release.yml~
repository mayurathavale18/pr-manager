name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y fakeroot dpkg-dev gzip
        
    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.0-dev"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Update version in control file
      run: |
        sed -i "s/Version: .*/Version: ${{ steps.get_version.outputs.VERSION }}/" packaging/debian/DEBIAN/control
        
    - name: Build .deb package
      run: |
        cd packaging
        chmod +x build-deb.sh
        ./build-deb.sh
        
    - name: Build binary release
      run: |
        cd packaging
        chmod +x create-binary-release.sh
        ./create-binary-release.sh
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Installation Options
          
          ### Debian/Ubuntu (.deb package)
          ```bash
          # Download and install
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/pr-script_${{ steps.get_version.outputs.VERSION }}_all.deb
          sudo dpkg -i pr-script_${{ steps.get_version.outputs.VERSION }}_all.deb
          sudo apt-get install -f  # Fix any dependency issues
          ```
          
          ### Binary Installation (All Linux Distributions)
          ```bash
          # Download and extract
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
          tar -xzf pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
          cd pr-script-${{ steps.get_version.outputs.VERSION }}-linux
          
          # Install (system-wide)
          sudo ./install.sh
          
          # Or install (user-only)
          ./install.sh
          ```
          
          ### Arch Linux (AUR)
          ```bash
          # Using yay or another AUR helper
          yay -S pr-script
          ```
          
          ## Usage
          ```bash
          pr-script --help
          pr-script 123  # Review and merge PR #123
          ```
          
    - name: Upload .deb package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packaging/build/pr-script_${{ steps.get_version.outputs.VERSION }}_all.deb
        asset_name: pr-script_${{ steps.get_version.outputs.VERSION }}_all.deb
        asset_content_type: application/vnd.debian.binary-package
        
    - name: Upload binary tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packaging/build/pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
        asset_name: pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload SHA256 checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packaging/build/pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz.sha256
        asset_name: pr-script-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz.sha256
        asset_content_type: text/plain
